package Star_Cinemas;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author jacob.s
 */
public class MoviePanel extends javax.swing.JFrame {

    /**
     * Creates new form MoviePanel
     */
    public MoviePanel() {
        initComponents();
        selectMovie();
    }

    Database db = new Database();

    Connection conn = null;
    Statement statement = null;
    ResultSet resultSet = null;

    public void selectMovie() {
        try
        {
            /*
            Initializes a database connection to output all movies from movie table via 
            resultSet in table form using rs2xml. 
             */
            conn = db.establishConnection();
            //conn = DriverManager.getConnection(url, usernameDerby, passwordDerby);
            statement = conn.createStatement();
            resultSet = statement.executeQuery("Select * from JACOB.MOVIETABLE");
            movieTable.setModel(DbUtils.resultSetToTableModel(resultSet));
        } catch (SQLException ex)
        {
            Logger.getLogger(MoviePanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        logoutPanelJump = new javax.swing.JLabel();
        billingPanelJump = new javax.swing.JLabel();
        productPanelJump = new javax.swing.JLabel();
        categoryPanelJump = new javax.swing.JLabel();
        Menu = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        exitProduct = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        movieID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        movieName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        movieTicketQuantity = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        moviePrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        movieGenre = new javax.swing.JComboBox<>();
        addMovie = new javax.swing.JButton();
        clearMovie = new javax.swing.JButton();
        editMovie = new javax.swing.JButton();
        deleteMovie = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        movieTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        movieActors = new javax.swing.JTextField();
        movieDirector = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        movieDuration = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        movieSession = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        movieDate = new javax.swing.JComboBox<>();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(255, 153, 204));

        logoutPanelJump.setFont(new java.awt.Font("Oriya MN", 1, 36)); // NOI18N
        logoutPanelJump.setForeground(new java.awt.Color(102, 48, 215));
        logoutPanelJump.setText("Log out");
        logoutPanelJump.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutPanelJumpMouseClicked(evt);
            }
        });

        billingPanelJump.setFont(new java.awt.Font("Oriya MN", 1, 36)); // NOI18N
        billingPanelJump.setForeground(new java.awt.Color(102, 48, 215));
        billingPanelJump.setText("       Billing");
        billingPanelJump.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billingPanelJumpMouseClicked(evt);
            }
        });

        productPanelJump.setFont(new java.awt.Font("Oriya MN", 1, 36)); // NOI18N
        productPanelJump.setForeground(new java.awt.Color(102, 48, 215));
        productPanelJump.setText("    Products");
        productPanelJump.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productPanelJumpMouseClicked(evt);
            }
        });

        categoryPanelJump.setFont(new java.awt.Font("Oriya MN", 1, 36)); // NOI18N
        categoryPanelJump.setForeground(new java.awt.Color(102, 48, 215));
        categoryPanelJump.setText("  Categories");
        categoryPanelJump.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                categoryPanelJumpMouseClicked(evt);
            }
        });

        Menu.setFont(new java.awt.Font("Oriya MN", 1, 36)); // NOI18N
        Menu.setForeground(new java.awt.Color(102, 48, 215));
        Menu.setText("        Menu");
        Menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenuMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(logoutPanelJump)
                .addGap(51, 51, 51))
            .addComponent(categoryPanelJump, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
            .addComponent(productPanelJump, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(billingPanelJump, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(Menu)
                .addGap(196, 196, 196)
                .addComponent(billingPanelJump, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(productPanelJump, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(categoryPanelJump, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 232, Short.MAX_VALUE)
                .addComponent(logoutPanelJump)
                .addGap(156, 156, 156))
        );

        jPanel1.setBackground(new java.awt.Color(102, 48, 215));
        jPanel1.setPreferredSize(new java.awt.Dimension(919, 990));

        exitProduct.setFont(new java.awt.Font("Oriya MN", 1, 24)); // NOI18N
        exitProduct.setForeground(new java.awt.Color(255, 153, 204));
        exitProduct.setText("X");
        exitProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitProductMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Oriya MN", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 153, 204));
        jLabel2.setText("Star Cinemas");

        jLabel4.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 153, 204));
        jLabel4.setText("Manage Movies");

        movieID.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        movieID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieIDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 153, 204));
        jLabel3.setText("MovieID");

        movieName.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        movieName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieNameActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 153, 204));
        jLabel5.setText("Name");

        movieTicketQuantity.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        movieTicketQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieTicketQuantityActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 153, 204));
        jLabel7.setText("Quantity");

        moviePrice.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        moviePrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                moviePriceMouseClicked(evt);
            }
        });
        moviePrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                moviePriceActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 153, 204));
        jLabel8.setText("Price");

        jLabel9.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 153, 204));
        jLabel9.setText("Genre");

        movieGenre.setFont(new java.awt.Font("Oriya MN", 0, 14)); // NOI18N
        movieGenre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Adventure", "Action ", "Animation", "Comedy ", "Crime", "Drama ", "Fantasy ", "Mystery", "Horror ", "Romance ", "Sci-Fi", "Sport", "SuperHero", "War", "Western ", "Thriller " }));
        movieGenre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieGenreActionPerformed(evt);
            }
        });

        addMovie.setBackground(new java.awt.Color(18, 30, 49));
        addMovie.setFont(new java.awt.Font("Oriya MN", 1, 24)); // NOI18N
        addMovie.setForeground(new java.awt.Color(255, 153, 204));
        addMovie.setText("Add");
        addMovie.setToolTipText("");
        addMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addMovieMouseClicked(evt);
            }
        });
        addMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMovieActionPerformed(evt);
            }
        });

        clearMovie.setBackground(new java.awt.Color(18, 30, 49));
        clearMovie.setFont(new java.awt.Font("Oriya MN", 1, 24)); // NOI18N
        clearMovie.setForeground(new java.awt.Color(255, 153, 204));
        clearMovie.setText("Clear");
        clearMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMovieMouseClicked(evt);
            }
        });
        clearMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearMovieActionPerformed(evt);
            }
        });

        editMovie.setBackground(new java.awt.Color(18, 30, 49));
        editMovie.setFont(new java.awt.Font("Oriya MN", 1, 24)); // NOI18N
        editMovie.setForeground(new java.awt.Color(255, 153, 204));
        editMovie.setText("Edit");
        editMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editMovieMouseClicked(evt);
            }
        });
        editMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMovieActionPerformed(evt);
            }
        });

        deleteMovie.setBackground(new java.awt.Color(18, 30, 49));
        deleteMovie.setFont(new java.awt.Font("Oriya MN", 1, 24)); // NOI18N
        deleteMovie.setForeground(new java.awt.Color(255, 153, 204));
        deleteMovie.setText("Delete");
        deleteMovie.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMovieMouseClicked(evt);
            }
        });
        deleteMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMovieActionPerformed(evt);
            }
        });

        movieTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Movie ID", "Genre", "Movie Name", "Duration", "Date", "Session", "Actors", "Director", "Quantity", "Price"
            }
        ));
        movieTable.setIntercellSpacing(new java.awt.Dimension(0, 0));
        movieTable.setRowHeight(50);
        movieTable.setSelectionBackground(new java.awt.Color(255, 153, 204));
        movieTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                movieTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(movieTable);

        jLabel6.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 153, 204));
        jLabel6.setText("Actors");

        movieActors.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        movieActors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieActorsActionPerformed(evt);
            }
        });

        movieDirector.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        movieDirector.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieDirectorActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 153, 204));
        jLabel10.setText("Director");

        movieDuration.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        movieDuration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieDurationActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 153, 204));
        jLabel11.setText("Duration");

        movieSession.setFont(new java.awt.Font("Oriya MN", 0, 14)); // NOI18N
        movieSession.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00pm", "3:00pm", "6:00pm", "9:00pm" }));
        movieSession.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieSessionActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 153, 204));
        jLabel12.setText("Session");

        jLabel13.setFont(new java.awt.Font("Oriya MN", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 153, 204));
        jLabel13.setText("Date");

        movieDate.setFont(new java.awt.Font("Oriya MN", 0, 14)); // NOI18N
        movieDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "28/10/22", "29/10/22", "30/10/22", "31/10/22", "01/11/22", "02/11/22", "03/11/22", "04/11/22", "05/11/22", "06/11/22", "07/11/22", "08/11/22" }));
        movieDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                movieDateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(exitProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(40, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1054, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(addMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)
                                        .addComponent(editMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(deleteMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(621, 621, 621)
                                        .addComponent(clearMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(117, 117, 117)
                                                .addComponent(movieID, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel5)
                                                    .addComponent(jLabel6)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel13))
                                                .addGap(117, 117, 117)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(movieActors, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(movieDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(movieName, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(movieDate, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(136, 136, 136)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel9))))
                                .addGap(88, 88, 88)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(movieGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(moviePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(movieDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(movieTicketQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(movieSession, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(jLabel4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(exitProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(70, 70, 70)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieDuration, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(moviePrice, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieTicketQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieActors, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieGenre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(movieSession, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(movieDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deleteMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearMovie, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1128, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 987, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void movieIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieIDActionPerformed

    private void movieNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieNameActionPerformed

    private void movieTicketQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieTicketQuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieTicketQuantityActionPerformed

    private void moviePriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_moviePriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_moviePriceActionPerformed

    private void movieGenreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieGenreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieGenreActionPerformed

    private void addMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addMovieActionPerformed

    private void clearMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearMovieActionPerformed

    private void editMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editMovieActionPerformed

    private void deleteMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteMovieActionPerformed

    private void addMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addMovieMouseClicked
        // TODO add your handling code here:
        /**
         * if any moviePanel text field is empty, tell user movie missing
         * information
         */

        if (movieID.getText().isEmpty() || movieName.getText().isEmpty() || movieDuration.getText().isEmpty() || movieActors.getText().isEmpty() || movieDirector.getText().isEmpty()
                || movieActors.getText().isEmpty() || movieTicketQuantity.getText().isEmpty()
                || moviePrice.getText().isEmpty() || movieGenre.getSelectedItem().toString().isEmpty() || movieDate.getSelectedItem().toString().isEmpty() || movieSession.getSelectedItem().toString().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Movie Missing Information!");
        } else
        {
            try
            {
                /*
            Initializes a database connection to add movies to movie table
                 */

                conn = db.establishConnection();
                PreparedStatement add = conn.prepareStatement("insert into MOVIETABLE values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

                add.setInt(1, Integer.valueOf(movieID.getText()));
                add.setString(2, movieName.getText().trim());
                add.setString(3, movieGenre.getSelectedItem().toString());
                add.setInt(4, Integer.valueOf(movieDuration.getText()));
                add.setString(5, movieDate.getSelectedItem().toString());
                add.setString(6, movieSession.getSelectedItem().toString());
                add.setString(7, movieActors.getText().trim());
                add.setString(8, movieDirector.getText().trim());
                add.setInt(9, Integer.parseInt(movieTicketQuantity.getText()));
                add.setDouble(10, Double.parseDouble(moviePrice.getText()));

                int row = add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Movie Successfully Added!");
                System.out.println("Movie Added!");
                conn.close();
                selectMovie();

            } catch (SQLException ex)
            {
                /*
            Catch duplicate ID Error
                 */
                if (ex.getSQLState().startsWith("23"))
                {
                    JOptionPane.showMessageDialog(this, "Duplicate ID Exists, Enter Unique ID!");
                } else
                {
                    Logger.getLogger(MoviePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                /*
            Catch numberFormatException
                 */
            } catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Invalid Input!\n"
                        + "ID = Whole Numbers only\n"
                        + "Name = All characters\n"
                        + "Duration = (Minutes) only\n"
                        + "Cast = Letters only\n"
                        + "Director = Letters only\n"
                        + "Quantity = Whole Numbers only\n"
                        + "Price = All numbers\n");
            }
        }
    }//GEN-LAST:event_addMovieMouseClicked

    private void moviePriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_moviePriceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_moviePriceMouseClicked

    private void clearMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMovieMouseClicked
        // TODO add your handling code here:

        /*
            Clear all movie textfields
         */
        movieID.setText("");
        movieName.setText("");
        movieDuration.setText("");
        movieActors.setText("");
        movieDirector.setText("");
        movieTicketQuantity.setText("");
        moviePrice.setText("");
    }//GEN-LAST:event_clearMovieMouseClicked

    private void deleteMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMovieMouseClicked
        // TODO add your handling code here:
        /*
            Initializes a database connection to DELETE movies from movie table
         */
        if (movieID.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Select Movie to be Deleted!");
        } else
        {
            try
            {

                conn = db.establishConnection();
                String movieSelection = movieID.getText();
                String deleteQuery = "Delete from JACOB.MOVIETABLE where MOVIEID=" + movieSelection;
                Statement delete = conn.createStatement();
                delete.executeUpdate(deleteQuery);
                selectMovie();
                JOptionPane.showMessageDialog(this, "Selected Movie Deleted!");

            } catch (Exception e)
            {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_deleteMovieMouseClicked

    private void movieTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_movieTableMouseClicked
        // TODO add your handling code here:
        /*
            Movie Panel textfields populated with Data from movie table
         */
        DefaultTableModel model = (DefaultTableModel) movieTable.getModel();
        int tableSelection = movieTable.getSelectedRow();
        movieID.setText(model.getValueAt(tableSelection, 0).toString());
        movieName.setText(model.getValueAt(tableSelection, 2).toString());
        movieGenre.setSelectedItem(model.getValueAt(tableSelection, 1).toString());
        movieDuration.setText(model.getValueAt(tableSelection, 3).toString());
        movieDate.setSelectedItem(model.getValueAt(tableSelection, 4).toString());
        movieSession.setSelectedItem(model.getValueAt(tableSelection, 5).toString());
        movieActors.setText(model.getValueAt(tableSelection, 6).toString());
        movieDirector.setText(model.getValueAt(tableSelection, 7).toString());
        moviePrice.setText(model.getValueAt(tableSelection, 9).toString());
        movieTicketQuantity.setText(model.getValueAt(tableSelection, 8).toString());

    }//GEN-LAST:event_movieTableMouseClicked

    private void editMovieMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editMovieMouseClicked
        // TODO add your handling code here:
        /**
         * if any moviePanel text field is empty, tell user movie missing
         * information
         */
        if (movieID.getText().isEmpty() || movieName.getText().isEmpty() || movieDuration.getText().isEmpty() || movieActors.getText().isEmpty() || movieDirector.getText().isEmpty()
                || movieActors.getText().isEmpty() || movieTicketQuantity.getText().isEmpty()
                || moviePrice.getText().isEmpty() || movieGenre.getSelectedItem().toString().isEmpty() || movieDate.getSelectedItem().toString().isEmpty() || movieSession.getSelectedItem().toString().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Movie Missing Information!");
        } else
        {
            try
            {
                /*
            Initializes a database connection to EDIT movies in movie table
                 */
                conn = db.establishConnection();
                String editQuery = "Update JACOB.MOVIETABLE set GENRE='" + movieGenre.getSelectedItem().toString() + "'" + ",NAME='" + movieName.getText().trim() + "'" + ",DURATION=" + Integer.parseInt(movieDuration.getText()) + "" + ",DATE='" + movieDate.getSelectedItem().toString() + "'" + ",SESSION='" + movieSession.getSelectedItem().toString() + "'" + ",ACTORS='" + movieActors.getText().trim() + "'" + ",DIRECTOR='" + movieDirector.getText().trim() + "'" + ",QUANTITY=" + Integer.parseInt(movieTicketQuantity.getText()) + "" + ",PRICE=" + Double.parseDouble(moviePrice.getText()) + "" + "where MOVIEID=" + movieID.getText();
                Statement edit = conn.createStatement();
                edit.executeUpdate(editQuery);
                JOptionPane.showMessageDialog(this, "Selected Movie Edited!");
                selectMovie();

            } catch (SQLException ex)
            {
                /*
            Catch duplicate ID Error
                 */
                if (ex.getSQLState().startsWith("23"))
                {
                    JOptionPane.showMessageDialog(this, "Duplicate ID Exists, Enter Unique ID!");
                } else
                {
                    Logger.getLogger(MoviePanel.class.getName()).log(Level.SEVERE, null, ex);
                }
                /*
            Catch numberFormatException
                 */
            } catch (NumberFormatException e)
            {
                JOptionPane.showMessageDialog(this, "Invalid Input!\n"
                        + "ID = Whole Numbers only\n"
                        + "Name = All characters\n"
                        + "Duration = (Minutes) only\n"
                        + "Cast = Letters only\n"
                        + "Director = Letters only\n"
                        + "Quantity = Whole Numbers only\n"
                        + "Price = All numbers\n");
            }
        }
    }//GEN-LAST:event_editMovieMouseClicked

    private void exitProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitProductMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_exitProductMouseClicked

    private void logoutPanelJumpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutPanelJumpMouseClicked
        // TODO add your handling code here:
        /*
            Open login screen when log out selected
         */
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutPanelJumpMouseClicked

    private void movieActorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieActorsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieActorsActionPerformed

    private void movieDirectorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieDirectorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieDirectorActionPerformed

    private void movieDurationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieDurationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieDurationActionPerformed

    private void movieSessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieSessionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieSessionActionPerformed

    private void movieDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_movieDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_movieDateActionPerformed

    private void billingPanelJumpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billingPanelJumpMouseClicked
        // TODO add your handling code here:
        /*
            Open billingPanel when selected on menu
         */
        new BillingPanel().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_billingPanelJumpMouseClicked

    private void productPanelJumpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productPanelJumpMouseClicked
        // TODO add your handling code here:
        /*
            Open products Panel when selected on menu
         */
        new Products().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_productPanelJumpMouseClicked

    private void categoryPanelJumpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_categoryPanelJumpMouseClicked
        // TODO add your handling code here:
        /*
            Open categoryPanel when selected on menu
         */
        new Category().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_categoryPanelJumpMouseClicked

    private void MenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MenuMouseClicked
        // TODO add your handling code here
        /*
            Open employeeMenuPanel when selected on menu
         */
        new EmployeeMenuPanel().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_MenuMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(MoviePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(MoviePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(MoviePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(MoviePanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MoviePanel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Menu;
    private javax.swing.JButton addMovie;
    private javax.swing.JLabel billingPanelJump;
    private javax.swing.JLabel categoryPanelJump;
    private javax.swing.JButton clearMovie;
    private javax.swing.JButton deleteMovie;
    private javax.swing.JButton editMovie;
    private javax.swing.JLabel exitProduct;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel logoutPanelJump;
    private javax.swing.JTextField movieActors;
    private javax.swing.JComboBox<String> movieDate;
    private javax.swing.JTextField movieDirector;
    private javax.swing.JTextField movieDuration;
    private javax.swing.JComboBox<String> movieGenre;
    private javax.swing.JTextField movieID;
    private javax.swing.JTextField movieName;
    private javax.swing.JTextField moviePrice;
    private javax.swing.JComboBox<String> movieSession;
    private javax.swing.JTable movieTable;
    private javax.swing.JTextField movieTicketQuantity;
    private javax.swing.JLabel productPanelJump;
    // End of variables declaration//GEN-END:variables
}
